
import java.util.*;
import javax.swing.*;

/*
ADTS LinkedListProject
Task manager/to do list organizer
Nov/Dec 2022
Ella Chi

TaskManager Class (main class):
Used to create GUI and user interaction. Handles a lot of the errors that can arise from user inputs.
 */
public class TaskManager extends javax.swing.JFrame {

    private static int defX = 10, defY = 10, width = 279, height = 200;

    
    private java.util.List<Subject> subjects = new ArrayList<Subject>(Arrays.asList(new Subject("Miscellaneous")));
    private Subject sub;
    private List allTasks, curList, comp;
    
    
    /**
     * Creates new form TaskManagerDisplay
     */
    public TaskManager() {
        sub = subjects.get(0);
        allTasks = new List();
        curList = allTasks;
        comp = new List();
        
        initComponents();
        
        setLayout(null);
        //pnlHome.setLayout(null);
        
        //set layout/options
        setSize(520, 320);
        chkComplete.setSelected(true);
        spnTime.setValue(30);
        
        dlgEdit.setSize(470, 230);
        pnlHome.setLocation(defX, defY);
        pnlAddTask.setLocation(defX+30, defY);
        pnlAddTask.setVisible(false);
        pnlList.setVisible(true);
        pnlList.setLocation(220, 20);
        pnlList.setSize(width, height);
        pnlTask.setLocation(pnlList.getLocation());
        pnlTask.setVisible(false);
        pnlTask.setLocation(width, height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgEdit = new javax.swing.JDialog();
        btnCancelEdit = new javax.swing.JButton();
        spnEditTime = new javax.swing.JSpinner();
        lblEditN = new javax.swing.JLabel();
        txtEditName = new javax.swing.JTextField();
        lblEditDesc = new javax.swing.JLabel();
        lblEditTime = new javax.swing.JLabel();
        btnEnterEdit = new javax.swing.JButton();
        txtEditDesc = new javax.swing.JTextArea();
        pnlAddTask = new javax.swing.JPanel();
        lblAdd = new javax.swing.JLabel();
        lblAddName = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        lblAddDesc = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        lblTime = new javax.swing.JLabel();
        cboAddSub = new javax.swing.JComboBox<>();
        lblAddSub = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnCancelAdd = new javax.swing.JButton();
        spnTime = new javax.swing.JSpinner();
        pnlHome = new javax.swing.JLayeredPane();
        btnComplete = new javax.swing.JButton();
        chkComplete = new javax.swing.JCheckBox();
        btnAddTask = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        pnlList = new javax.swing.JPanel();
        lblComp = new javax.swing.JLabel();
        lblToDo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstToDo = new javax.swing.JList<>();
        pnlComp = new javax.swing.JScrollPane();
        lstComplete = new javax.swing.JList<>();
        cboSub = new javax.swing.JComboBox<>();
        pnlTask = new javax.swing.JPanel();
        lblTaskName = new javax.swing.JLabel();
        lblTaskDesc = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnCompThis = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();

        dlgEdit.setTitle("Edit Task");

        btnCancelEdit.setText("Cancel");
        btnCancelEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelEditActionPerformed(evt);
            }
        });

        lblEditN.setText("Task Name:");

        lblEditDesc.setText("Task Description:");

        lblEditTime.setText("<html> Estimated time to complete <br> (in minutes):");

        btnEnterEdit.setText("Add Task");
        btnEnterEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterEditActionPerformed(evt);
            }
        });

        txtEditDesc.setColumns(20);
        txtEditDesc.setRows(5);

        javax.swing.GroupLayout dlgEditLayout = new javax.swing.GroupLayout(dlgEdit.getContentPane());
        dlgEdit.getContentPane().setLayout(dlgEditLayout);
        dlgEditLayout.setHorizontalGroup(
            dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgEditLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEnterEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelEdit))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgEditLayout.createSequentialGroup()
                        .addGroup(dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEditTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEditN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEditName)
                            .addComponent(spnEditTime, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)))
                    .addGroup(dlgEditLayout.createSequentialGroup()
                        .addComponent(lblEditDesc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEditDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        dlgEditLayout.setVerticalGroup(
            dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgEditLayout.createSequentialGroup()
                        .addGroup(dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEditN)
                            .addComponent(txtEditName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEditDesc)
                            .addComponent(txtEditDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblEditTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dlgEditLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(spnEditTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dlgEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterEdit)
                    .addComponent(btnCancelEdit))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Task Manager - To Do List");

        lblAdd.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblAdd.setText("Add Task:");

        lblAddName.setText("Task Name:");

        lblAddDesc.setText("Task Description:");

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        jScrollPane3.setViewportView(txtDesc);

        lblTime.setText("<html> Estimated time to complete <br> (in minutes):");

        cboAddSub.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Miscellaneous", "Add subject" }));
        cboAddSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAddSubActionPerformed(evt);
            }
        });

        lblAddSub.setText("Subject: ");

        btnAdd.setText("Add Task");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCancelAdd.setText("Cancel");
        btnCancelAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddTaskLayout = new javax.swing.GroupLayout(pnlAddTask);
        pnlAddTask.setLayout(pnlAddTaskLayout);
        pnlAddTaskLayout.setHorizontalGroup(
            pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddTaskLayout.createSequentialGroup()
                        .addComponent(lblAdd)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddTaskLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelAdd))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddTaskLayout.createSequentialGroup()
                        .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblAddSub, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAddDesc)
                            .addComponent(lblAddName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboAddSub, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTitle)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(spnTime))))
                .addContainerGap())
        );
        pnlAddTaskLayout.setVerticalGroup(
            pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdd)
                .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddTaskLayout.createSequentialGroup()
                        .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddSub)
                            .addComponent(cboAddSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddName)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddDesc)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAddTaskLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(spnTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnCancelAdd))
                .addContainerGap())
        );

        btnComplete.setText("Next Task Complete");
        btnComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteActionPerformed(evt);
            }
        });

        chkComplete.setText("Show completed");
        chkComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCompleteActionPerformed(evt);
            }
        });

        btnAddTask.setText("Add Task");
        btnAddTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTaskActionPerformed(evt);
            }
        });

        btnClear.setText("Clear Tasks");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnView.setText("View Task Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        lblComp.setText("Completed:");

        lblToDo.setText("To Do:");

        jScrollPane2.setViewportView(lstToDo);

        pnlComp.setViewportView(lstComplete);

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblToDo)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblComp)
                    .addComponent(pnlComp, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblToDo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblComp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(pnlComp)))
        );

        cboSub.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All tasks" }));
        cboSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSubActionPerformed(evt);
            }
        });

        pnlTask.setLocation(new java.awt.Point(-32192, -32614));
        pnlTask.setPreferredSize(new java.awt.Dimension(279, 154));

        lblTaskName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblTaskName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTaskName.setText("TITLE");

        lblTaskDesc.setText("<html>  description");

        btnNext.setText("Next ");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrev.setText("Previous");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnCompThis.setText("Complete");
        btnCompThis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompThisActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTaskLayout = new javax.swing.GroupLayout(pnlTask);
        pnlTask.setLayout(pnlTaskLayout);
        pnlTaskLayout.setHorizontalGroup(
            pnlTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaskLayout.createSequentialGroup()
                .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlTaskLayout.createSequentialGroup()
                .addGroup(pnlTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTaskName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlTaskLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTaskDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCompThis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTaskLayout.setVerticalGroup(
            pnlTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaskLayout.createSequentialGroup()
                .addComponent(lblTaskName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTaskDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCompThis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrev)
                    .addComponent(btnEdit)
                    .addComponent(btnNext))
                .addGap(44, 44, 44))
        );

        pnlHome.setLayer(btnComplete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlHome.setLayer(chkComplete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlHome.setLayer(btnAddTask, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlHome.setLayer(btnClear, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlHome.setLayer(btnView, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlHome.setLayer(pnlList, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlHome.setLayer(cboSub, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlHome.setLayer(pnlTask, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkComplete)
                .addGap(59, 59, 59)
                .addComponent(pnlTask, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
            .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlHomeLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnComplete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cboSub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(pnlList, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(327, 327, 327)))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomeLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlTask, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
            .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlHomeLayout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlHomeLayout.createSequentialGroup()
                            .addComponent(cboSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(5, 5, 5)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(49, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(pnlAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(pnlHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(pnlAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(420, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //display add task panel to prompt user input
    private void btnAddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTaskActionPerformed
        pnlHome.setVisible(false);
        pnlAddTask.setVisible(true);
    }//GEN-LAST:event_btnAddTaskActionPerformed

    private void cboAddSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAddSubActionPerformed
        if (cboAddSub.getSelectedItem().equals("Add subject")){
            //creates new subject if correlating combo box item is selected
            String name = JOptionPane.showInputDialog("Enter subject name: ", "Subject" + cboSub.getItemCount());
            if (name != null){
              Subject news = new Subject(name);
              subjects.add(subjects.size()-1, news);
              cboSub.insertItemAt(news.toString(), cboSub.getItemCount());
              cboAddSub.insertItemAt(news.toString(), cboSub.getItemCount()-2);
              cboAddSub.setSelectedIndex(cboSub.getItemCount()-2);
              sub = news;
            } 
        } else {
            //sets subject to user's selection
            sub = subjects.get(cboAddSub.getSelectedIndex());
        }
    }//GEN-LAST:event_cboAddSubActionPerformed

    //switch between list and individual task view
    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        
        if (pnlList.isVisible()){
        //is currently viewing list, view individual tasks details, starting form first task            
            Task cur = (Task)curList.get(0);
            if (cur == null){
                //if no tasks uncompleted tasks to show for current list, error message 
                JOptionPane.showMessageDialog(null, "No tasks to show");
            } else {
                displayDesc(cur);
                btnView.setText("View List");
                pnlList.setVisible(false);
                pnlTask.setVisible(true);
                

            }
        } else {
        //if currently viewing task details, hide and view task list
            pnlList.setVisible(true);
            pnlTask.setVisible(false);
            btnView.setText("View Tasks");
        }
    }//GEN-LAST:event_btnViewActionPerformed

    //switch selected subject
    private void cboSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSubActionPerformed
        if (cboSub.getSelectedIndex() == 0){
            //if viewing all tasks, subject is miscellaneous; set current list to all tasks
            cboAddSub.setSelectedIndex(cboAddSub.getItemCount()-2);
            sub = subjects.get(subjects.size()-1);
            curList = allTasks;
        } else {
            //set current subject + list to selected
            cboAddSub.setSelectedIndex(cboSub.getSelectedIndex()-1);
            sub = subjects.get(cboSub.getSelectedIndex() - 1);
            curList = sub.toDo();
        }
        
        //update displayed tasks
        displayTasks();

    }//GEN-LAST:event_cboSubActionPerformed

    //hide/show completed list
    private void chkCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCompleteActionPerformed
        if (chkComplete.isSelected()){
            pnlComp.setVisible(true);
            lblComp.setVisible(true);
        } else {
            lblComp.setVisible(false);
            pnlComp.setVisible(false);
            
        }
            
    }//GEN-LAST:event_chkCompleteActionPerformed

    //clear all tasks (from all subjects) and update display
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        allTasks = new List();
        comp = new List();
        for (Subject s : subjects){
            s.clear();
        }
        displayTasks();
    }//GEN-LAST:event_btnClearActionPerformed

    //Add task to list
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
            
            //errors if no task name or if competion time is negative
            if (txtTitle.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Add task name");
                return;
            }
            if((int)spnTime.getValue() < 0){
                JOptionPane.showMessageDialog(null, "Completion time must be a positive number");
                return;
            }
            
            //new task based on user input
            int length = (int)spnTime.getValue();
            Task newt = new Task(txtTitle.getText(), txtDesc.getText(), length, sub);
            
            //add new task to all tasks and subject list + update display
            allTasks.addLast(newt);
            sub.addTask(newt);
            displayTasks();
            
            //return home + reset 
            pnlAddTask.setVisible(false);
            pnlHome.setVisible(true);
            txtTitle.setText("");
            txtDesc.setText("");
            spnTime.setValue(30);

    }//GEN-LAST:event_btnAddActionPerformed

    //complete top task of current list - remove from to do and add to completed
    private void btnCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteActionPerformed
        //set subject to currently selected subject
        if (cboSub.getSelectedIndex() == 0){
            sub = subjects.get(subjects.size()-1);
        } else {
            sub = subjects.get(cboSub.getSelectedIndex()-1);
        }
        
        if (sub.getTitle() == "Miscellaneous"){
            //remove miscellaneous tasks
            comp.addLast(allTasks.remove(0));
            sub.completeTask();
        } else {
            //remove tasks from subject
            Task c = sub.completeTask();
            
            allTasks.remove(c);
            comp.addLast(c);
        }
        
        //update dispayed tasks
        displayTasks();
    }//GEN-LAST:event_btnCompleteActionPerformed

    //return home
    private void btnCancelAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAddActionPerformed
        pnlAddTask.setVisible(false);
        pnlHome.setVisible(true);
    }//GEN-LAST:event_btnCancelAddActionPerformed

    //display previous task details
    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        displayDesc((Task)curList.getPrev());
        
    }//GEN-LAST:event_btnPrevActionPerformed

    //display next task details
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        displayDesc((Task)curList.getNext());
    }//GEN-LAST:event_btnNextActionPerformed

    //complete currently displayed task
    private void btnCompThisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompThisActionPerformed
        //remove and add tasks to corresponding list
        if (sub.getTitle() == "Miscellaneous"){
            comp.addLast(allTasks.removePtr());
            
        } else {            
            Task t = (Task)curList.removePtr();
            sub.addCompleted(t);
            
            allTasks.remove(t);
            comp.addLast(t);
        }
        
        //update display
        Task next = (Task) curList.getCur();
        if(next == null){
            //if no next task, return home
            JOptionPane.showMessageDialog(null, "Tasks complete");
            pnlList.setVisible(true);
            pnlTask.setVisible(false);
            btnView.setText("View Tasks");
            
        } else {
            //else, display next task
            displayDesc(next);
        }
        
        //update display list
        displayTasks();

    }//GEN-LAST:event_btnCompThisActionPerformed

    //return back to original page
    private void btnCancelEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelEditActionPerformed
        dlgEdit.setVisible(false);
    }//GEN-LAST:event_btnCancelEditActionPerformed

    //edit task details
    private void btnEnterEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterEditActionPerformed
        Task cur = (Task)curList.getCur();
        
        cur.editTask(txtEditName.getText(), txtEditDesc.getText(), (int)spnEditTime.getValue());
        
        dlgEdit.setVisible(false);
        displayDesc(cur);
    }//GEN-LAST:event_btnEnterEditActionPerformed

    
    //display update options
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Task cur = (Task)curList.getCur();
        
        txtEditName.setText(cur.getTitle());
        txtEditDesc.setText(cur.getDescription());
        spnEditTime.setValue(cur.getLength());
        
        dlgEdit.setVisible(true);

    }//GEN-LAST:event_btnEditActionPerformed

    
    //update display for to do and completed lists
    private void displayTasks(){
        
        //choose current list based on current settings
        List curList;
        List curComp;
        if (cboSub.getSelectedItem().equals("All tasks")){
            curList = allTasks;
            curComp = comp;
        } else{
            curList = subjects.get(cboSub.getSelectedIndex()-1).toDo();
            curComp = subjects.get(cboSub.getSelectedIndex()-1).completed();
        }
        
        //set list data
        lstToDo.setListData(curList.getTasks());
        lstComplete.setListData(curComp.getTasks());
                
    }
    
    
    //display task details
    private void displayDesc(Task t){
        lblTaskName.setText(t.getTitle() + " (" + t.getSub().getTitle() + ")");
        lblTaskDesc.setText("<html>" + t.getDescription() + "<br>Estimated time to complete: " + t.getLength() + " minutes");

    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TaskManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddTask;
    private javax.swing.JButton btnCancelAdd;
    private javax.swing.JButton btnCancelEdit;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCompThis;
    private javax.swing.JButton btnComplete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEnterEdit;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cboAddSub;
    private javax.swing.JComboBox<String> cboSub;
    private javax.swing.JCheckBox chkComplete;
    private javax.swing.JDialog dlgEdit;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAdd;
    private javax.swing.JLabel lblAddDesc;
    private javax.swing.JLabel lblAddName;
    private javax.swing.JLabel lblAddSub;
    private javax.swing.JLabel lblComp;
    private javax.swing.JLabel lblEditDesc;
    private javax.swing.JLabel lblEditN;
    private javax.swing.JLabel lblEditTime;
    private javax.swing.JLabel lblTaskDesc;
    private javax.swing.JLabel lblTaskName;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblToDo;
    private javax.swing.JList<String> lstComplete;
    private javax.swing.JList<String> lstToDo;
    private javax.swing.JPanel pnlAddTask;
    private javax.swing.JScrollPane pnlComp;
    private javax.swing.JLayeredPane pnlHome;
    private javax.swing.JPanel pnlList;
    private javax.swing.JPanel pnlTask;
    private javax.swing.JSpinner spnEditTime;
    private javax.swing.JSpinner spnTime;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextArea txtEditDesc;
    private javax.swing.JTextField txtEditName;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
